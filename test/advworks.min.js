var advworks={database:"AdventureWorks2014",source:"mssql",description:"AdventureWorks 2014 Sample OLTP Database",objects:[{object:"Address",description:"Street address information for customers, employees, and vendors.",primarykey:"AddressID",columns:[{column:"AddressLine1",type:"text",unicode:!0,minchars:3,maxchars:60,required:!0},{column:"AddressLine2",type:"text",unicode:!0,maxchars:60,required:!1},{column:"City",type:"text",unicode:!0,minchars:3,maxchars:30,required:!0},{column:"StateProvinceID",type:"ref",refobj:"StateProvince",required:!0},{column:"PostalCode",type:"text",unicode:!0,minchars:3,maxchars:15,required:!0},{column:"SpatialLocation",type:"geography",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"AddressType",description:"Types of addresses stored in the Address table. ",primarykey:"AddressTypeID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"AWBuildVersion",description:"Current version number of the AdventureWorks 2014 sample database. ",primarykey:"SystemInformationID",columns:[{column:"Database Version",type:"text",unicode:!0,minchars:3,maxchars:25,required:!0},{column:"VersionDate",type:"datetime",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"BillOfMaterials",description:"Items required to make bicycles and bicycle subassemblies. It identifies the heirarchical relationship between a parent product and its components.",primarykey:"BillOfMaterialsID",columns:[{column:"ProductAssemblyID",type:"ref",refobj:"Product",required:!1},{column:"ComponentID",type:"ref",refobj:"Product",required:!0},{column:"StartDate",type:"datetime",required:!0,default:"(getdate())"},{column:"EndDate",type:"datetime",required:!1},{column:"UnitMeasureCode",type:"ref",refobj:"UnitMeasure",required:!0},{column:"BOMLevel",type:"num",negatives:!0,digits:5,required:!0},{column:"PerAssemblyQty",type:"num",negatives:!0,digits:8,decimals:2,required:!0,default:"((1.00))"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"BusinessEntity",description:"Source of the ID that connects vendors, customers, and employees with address and contact information.",primarykey:"BusinessEntityID",columns:[{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"BusinessEntityAddress",description:"Cross-reference table mapping customers, vendors, and employees to their addresses.",primarykey:["AddressID","AddressTypeID","BusinessEntityID"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"BusinessEntity",required:!0},{column:"AddressID",type:"ref",refobj:"Address",required:!0},{column:"AddressTypeID",type:"ref",refobj:"AddressType",required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"BusinessEntityContact",description:"Cross-reference table mapping stores, vendors, and employees to people",primarykey:["BusinessEntityID","ContactTypeID","PersonID"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"BusinessEntity",required:!0},{column:"PersonID",type:"ref",refobj:"Person",required:!0},{column:"ContactTypeID",type:"ref",refobj:"ContactType",required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ContactType",description:"Lookup table containing the types of business entity contacts.",primarykey:"ContactTypeID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"CountryRegion",description:"Lookup table containing the ISO standard codes for countries and regions.",primarykey:"CountryRegionCode",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"CountryRegionCurrency",description:"Cross-reference table mapping ISO currency codes to a country or region.",primarykey:["CountryRegionCode","CurrencyCode"],columns:[{column:"CountryRegionCode",type:"ref",refobj:"CountryRegion",required:!0},{column:"CurrencyCode",type:"ref",refobj:"Currency",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"CreditCard",description:"Customer credit card information.",primarykey:"CreditCardID",columns:[{column:"CardType",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"CardNumber",type:"text",unicode:!0,minchars:3,maxchars:25,required:!0},{column:"ExpMonth",type:"num",negatives:!1,digits:3,required:!0},{column:"ExpYear",type:"num",negatives:!0,digits:5,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Culture",description:"Lookup table containing the languages in which some AdventureWorks data is stored.",primarykey:"CultureID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Currency",description:"Lookup table containing standard ISO currencies.",primarykey:"CurrencyCode",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"CurrencyRate",description:"Currency exchange rates.",primarykey:"CurrencyRateID",columns:[{column:"CurrencyRateDate",type:"datetime",required:!0},{column:"FromCurrencyCode",type:"ref",refobj:"Currency",required:!0},{column:"ToCurrencyCode",type:"ref",refobj:"Currency",required:!0},{column:"AverageRate",type:"money",required:!0},{column:"EndOfDayRate",type:"money",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Customer",description:"Current customer information. Also see the Person and Store tables.",primarykey:"CustomerID",columns:[{column:"PersonID",type:"ref",refobj:"Person",required:!1},{column:"StoreID",type:"ref",refobj:"Store",required:!1},{column:"TerritoryID",type:"ref",refobj:"SalesTerritory",required:!1},{column:"AccountNumber",type:"text",unicode:!1,minchars:3,maxchars:10,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"DatabaseLog",description:"Audit table tracking all DDL changes made to the AdventureWorks database. Data is captured by the database trigger ddlDatabaseTriggerLog.",primarykey:"DatabaseLogID",columns:[{column:"PostTime",type:"datetime",required:!0},{column:"DatabaseUser",type:"text",unicode:!0,minchars:3,maxchars:128,required:!0},{column:"Event",type:"text",unicode:!0,minchars:3,maxchars:128,required:!0},{column:"Schema",type:"text",unicode:!0,maxchars:128,required:!1},{column:"Object",type:"text",unicode:!0,maxchars:128,required:!1},{column:"TSQL",type:"text",unicode:!0,minchars:3,length:"max",required:!0},{column:"XmlEvent",type:"xml",required:!0}]},{object:"Department",description:"Lookup table containing the departments within the Adventure Works Cycles company.",primarykey:"DepartmentID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"GroupName",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Document",description:"Product maintenance documents.",primarykey:"DocumentNode",columns:[{column:"DocumentLevel",type:"num",negatives:!0,digits:5,required:!1},{column:"Title",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"Owner",type:"ref",refobj:"Employee",required:!0},{column:"FolderFlag",type:"bit",required:!0,default:"((0))"},{column:"FileName",type:"text",unicode:!0,minchars:3,maxchars:400,required:!0},{column:"FileExtension",type:"text",unicode:!0,minchars:3,maxchars:8,required:!0},{column:"Revision",type:"text",unicode:!0,minchars:3,maxchars:5,required:!0},{column:"ChangeNumber",type:"num",negatives:!0,digits:10,required:!0,default:"((0))"},{column:"Status",type:"num",negatives:!1,digits:3,required:!0},{column:"DocumentSummary",type:"text",unicode:!0,length:"max",required:!1},{column:"Document",type:"varbinary",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"EmailAddress",description:"Where to send a person email.",primarykey:["BusinessEntityID","EmailAddressID"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"Person",required:!0},{column:"EmailAddressID",type:"num",negatives:!0,digits:10,required:!0},{column:"EmailAddress",type:"text",unicode:!0,maxchars:50,required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Employee",description:"Employee information such as salary, department, and title.",primarykey:"BusinessEntityID",columns:[{column:"NationalIDNumber",type:"text",unicode:!0,minchars:3,maxchars:15,required:!0},{column:"LoginID",type:"text",unicode:!0,minchars:3,maxchars:256,required:!0},{column:"OrganizationNode",type:"hierarchyid",required:!1},{column:"OrganizationLevel",type:"num",negatives:!0,digits:5,required:!1},{column:"JobTitle",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"BirthDate",type:"date",required:!0},{column:"MaritalStatus",type:"text",unicode:!0,minchars:3,maxchars:1,required:!0},{column:"Gender",type:"text",unicode:!0,minchars:3,maxchars:1,required:!0},{column:"HireDate",type:"date",required:!0},{column:"SalariedFlag",type:"bit",required:!0,default:"((1))"},{column:"VacationHours",type:"num",negatives:!0,digits:5,required:!0,default:"((0))"},{column:"SickLeaveHours",type:"num",negatives:!0,digits:5,required:!0,default:"((0))"},{column:"CurrentFlag",type:"bit",required:!0,default:"((1))"},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"EmployeeDepartmentHistory",description:"Employee department transfers.",primarykey:["BusinessEntityID","DepartmentID","ShiftID","StartDate"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"Employee",required:!0},{column:"DepartmentID",type:"ref",refobj:"Department",required:!0},{column:"ShiftID",type:"ref",refobj:"Shift",required:!0},{column:"StartDate",type:"date",required:!0},{column:"EndDate",type:"date",required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"EmployeePayHistory",description:"Employee pay history.",primarykey:["BusinessEntityID","RateChangeDate"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"Employee",required:!0},{column:"RateChangeDate",type:"datetime",required:!0},{column:"Rate",type:"money",required:!0},{column:"PayFrequency",type:"num",negatives:!1,digits:3,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ErrorLog",description:"Audit table tracking errors in the the AdventureWorks database that are caught by the CATCH block of a TRY...CATCH construct. Data is inserted by stored procedure dbo.uspLogError when it is executed from inside the CATCH block of a TRY...CATCH construct.",primarykey:"ErrorLogID",columns:[{column:"ErrorTime",type:"datetime",required:!0,default:"(getdate())"},{column:"UserName",type:"text",unicode:!0,minchars:3,maxchars:128,required:!0},{column:"ErrorNumber",type:"num",negatives:!0,digits:10,required:!0},{column:"ErrorSeverity",type:"num",negatives:!0,digits:10,required:!1},{column:"ErrorState",type:"num",negatives:!0,digits:10,required:!1},{column:"ErrorProcedure",type:"text",unicode:!0,maxchars:126,required:!1},{column:"ErrorLine",type:"num",negatives:!0,digits:10,required:!1},{column:"ErrorMessage",type:"text",unicode:!0,minchars:3,maxchars:4e3,required:!0}]},{object:"Illustration",description:"Bicycle assembly diagrams.",primarykey:"IllustrationID",columns:[{column:"Diagram",type:"xml",required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"JobCandidate",description:"R�sum�s submitted to Human Resources by job applicants.",primarykey:"JobCandidateID",columns:[{column:"BusinessEntityID",type:"ref",refobj:"Employee",required:!1},{column:"Resume",type:"xml",required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Location",description:"Product inventory and manufacturing locations.",primarykey:"LocationID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"CostRate",type:"smallmoney",required:!0,default:"((0.00))"},{column:"Availability",type:"num",negatives:!0,digits:8,decimals:2,required:!0,default:"((0.00))"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Password",description:"One way hashed authentication information",primarykey:"BusinessEntityID",columns:[{column:"PasswordHash",type:"text",unicode:!1,minchars:3,maxchars:128,required:!0},{column:"PasswordSalt",type:"text",unicode:!1,minchars:3,maxchars:10,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Person",description:"Human beings involved with AdventureWorks: employees, customer contacts, and vendor contacts.",primarykey:"BusinessEntityID",columns:[{column:"PersonType",type:"text",unicode:!0,minchars:3,maxchars:2,required:!0},{column:"NameStyle",type:"bit",required:!0,default:"((0))"},{column:"Title",type:"text",unicode:!0,maxchars:8,required:!1},{column:"FirstName",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"MiddleName",type:"text",unicode:!0,maxchars:50,required:!1},{column:"LastName",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"Suffix",type:"text",unicode:!0,maxchars:10,required:!1},{column:"EmailPromotion",type:"num",negatives:!0,digits:10,required:!0,default:"((0))"},{column:"AdditionalContactInfo",type:"xml",required:!1},{column:"Demographics",type:"xml",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"PersonCreditCard",description:"Cross-reference table mapping people to their credit card information in the CreditCard table. ",primarykey:["BusinessEntityID","CreditCardID"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"Person",required:!0},{column:"CreditCardID",type:"ref",refobj:"CreditCard",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"PersonPhone",description:"Telephone number and type of a person.",primarykey:["BusinessEntityID","PhoneNumber","PhoneNumberTypeID"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"Person",required:!0},{column:"PhoneNumber",type:"text",unicode:!0,minchars:3,maxchars:25,required:!0},{column:"PhoneNumberTypeID",type:"ref",refobj:"PhoneNumberType",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"PhoneNumberType",description:"Type of phone number of a person.",primarykey:"PhoneNumberTypeID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Product",description:"Products sold or used in the manfacturing of sold products.",primarykey:"ProductID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ProductNumber",type:"text",unicode:!0,minchars:3,maxchars:25,required:!0},{column:"MakeFlag",type:"bit",required:!0,default:"((1))"},{column:"FinishedGoodsFlag",type:"bit",required:!0,default:"((1))"},{column:"Color",type:"text",unicode:!0,maxchars:15,required:!1},{column:"SafetyStockLevel",type:"num",negatives:!0,digits:5,required:!0},{column:"ReorderPoint",type:"num",negatives:!0,digits:5,required:!0},{column:"StandardCost",type:"money",required:!0},{column:"ListPrice",type:"money",required:!0},{column:"Size",type:"text",unicode:!0,maxchars:5,required:!1},{column:"SizeUnitMeasureCode",type:"ref",refobj:"UnitMeasure",required:!1},{column:"WeightUnitMeasureCode",type:"ref",refobj:"UnitMeasure",required:!1},{column:"Weight",type:"num",negatives:!0,digits:8,decimals:2,required:!1},{column:"DaysToManufacture",type:"num",negatives:!0,digits:10,required:!0},{column:"ProductLine",type:"text",unicode:!0,maxchars:2,required:!1},{column:"Class",type:"text",unicode:!0,maxchars:2,required:!1},{column:"Style",type:"text",unicode:!0,maxchars:2,required:!1},{column:"ProductSubcategoryID",type:"ref",refobj:"ProductSubcategory",required:!1},{column:"ProductModelID",type:"ref",refobj:"ProductModel",required:!1},{column:"SellStartDate",type:"datetime",required:!0},{column:"SellEndDate",type:"datetime",required:!1},{column:"DiscontinuedDate",type:"datetime",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductCategory",description:"High-level product categorization.",primarykey:"ProductCategoryID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductCostHistory",description:"Changes in the cost of a product over time.",primarykey:["ProductID","StartDate"],columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"StartDate",type:"datetime",required:!0},{column:"EndDate",type:"datetime",required:!1},{column:"StandardCost",type:"money",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductDescription",description:"Product descriptions in several languages.",primarykey:"ProductDescriptionID",columns:[{column:"Description",type:"text",unicode:!0,minchars:3,maxchars:400,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductDocument",description:"Cross-reference table mapping products to related product documents.",primarykey:["DocumentNode","ProductID"],columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"DocumentNode",type:"ref",refobj:"Document",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductInventory",description:"Product inventory information.",primarykey:["LocationID","ProductID"],columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"LocationID",type:"ref",refobj:"Location",required:!0},{column:"Shelf",type:"text",unicode:!0,minchars:3,maxchars:10,required:!0},{column:"Bin",type:"num",negatives:!1,digits:3,required:!0},{column:"Quantity",type:"num",negatives:!0,digits:5,required:!0,default:"((0))"},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductListPriceHistory",description:"Changes in the list price of a product over time.",primarykey:["ProductID","StartDate"],columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"StartDate",type:"datetime",required:!0},{column:"EndDate",type:"datetime",required:!1},{column:"ListPrice",type:"money",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductModel",description:"Product model classification.",primarykey:"ProductModelID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"CatalogDescription",type:"xml",required:!1},{column:"Instructions",type:"xml",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductModelIllustration",description:"Cross-reference table mapping product models and illustrations.",primarykey:["IllustrationID","ProductModelID"],columns:[{column:"ProductModelID",type:"ref",refobj:"ProductModel",required:!0},{column:"IllustrationID",type:"ref",refobj:"Illustration",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductModelProductDescriptionCulture",description:"Cross-reference table mapping product descriptions and the language the description is written in.",primarykey:["CultureID","ProductDescriptionID","ProductModelID"],columns:[{column:"ProductModelID",type:"ref",refobj:"ProductModel",required:!0},{column:"ProductDescriptionID",type:"ref",refobj:"ProductDescription",required:!0},{column:"CultureID",type:"ref",refobj:"Culture",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductPhoto",description:"Product images.",primarykey:"ProductPhotoID",columns:[{column:"ThumbNailPhoto",type:"varbinary",required:!1},{column:"ThumbnailPhotoFileName",type:"text",unicode:!0,maxchars:50,required:!1},{column:"LargePhoto",type:"varbinary",required:!1},{column:"LargePhotoFileName",type:"text",unicode:!0,maxchars:50,required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductProductPhoto",description:"Cross-reference table mapping products and product photos.",primarykey:["ProductID","ProductPhotoID"],columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"ProductPhotoID",type:"ref",refobj:"ProductPhoto",required:!0},{column:"Primary",type:"bit",required:!0,default:"((0))"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductReview",description:"Customer reviews of products they have purchased.",primarykey:"ProductReviewID",columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"ReviewerName",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ReviewDate",type:"datetime",required:!0,default:"(getdate())"},{column:"EmailAddress",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"Rating",type:"num",negatives:!0,digits:10,required:!0},{column:"Comments",type:"text",unicode:!0,maxchars:3850,required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductSubcategory",description:"Product subcategories. See ProductCategory table.",primarykey:"ProductSubcategoryID",columns:[{column:"ProductCategoryID",type:"ref",refobj:"ProductCategory",required:!0},{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ProductVendor",description:"Cross-reference table mapping vendors with the products they supply.",primarykey:["BusinessEntityID","ProductID"],columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"BusinessEntityID",type:"ref",refobj:"Vendor",required:!0},{column:"AverageLeadTime",type:"num",negatives:!0,digits:10,required:!0},{column:"StandardPrice",type:"money",required:!0},{column:"LastReceiptCost",type:"money",required:!1},{column:"LastReceiptDate",type:"datetime",required:!1},{column:"MinOrderQty",type:"num",negatives:!0,digits:10,required:!0},{column:"MaxOrderQty",type:"num",negatives:!0,digits:10,required:!0},{column:"OnOrderQty",type:"num",negatives:!0,digits:10,required:!1},{column:"UnitMeasureCode",type:"ref",refobj:"UnitMeasure",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"PurchaseOrderDetail",description:"Individual products associated with a specific purchase order. See PurchaseOrderHeader.",primarykey:["PurchaseOrderDetailID","PurchaseOrderID"],columns:[{column:"PurchaseOrderID",type:"ref",refobj:"PurchaseOrderHeader",required:!0},{column:"PurchaseOrderDetailID",type:"num",negatives:!0,digits:10,required:!0},{column:"DueDate",type:"datetime",required:!0},{column:"OrderQty",type:"num",negatives:!0,digits:5,required:!0},{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"UnitPrice",type:"money",required:!0},{column:"LineTotal",type:"money",required:!0},{column:"ReceivedQty",type:"num",negatives:!0,digits:8,decimals:2,required:!0},{column:"RejectedQty",type:"num",negatives:!0,digits:8,decimals:2,required:!0},{column:"StockedQty",type:"num",negatives:!0,digits:9,decimals:2,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"PurchaseOrderHeader",description:"General purchase order information. See PurchaseOrderDetail.",primarykey:"PurchaseOrderID",columns:[{column:"RevisionNumber",type:"num",negatives:!1,digits:3,required:!0,default:"((0))"},{column:"Status",type:"num",negatives:!1,digits:3,required:!0,default:"((1))"},{column:"EmployeeID",type:"ref",refobj:"Employee",required:!0},{column:"VendorID",type:"ref",refobj:"Vendor",required:!0},{column:"ShipMethodID",type:"ref",refobj:"ShipMethod",required:!0},{column:"OrderDate",type:"datetime",required:!0,default:"(getdate())"},{column:"ShipDate",type:"datetime",required:!1},{column:"SubTotal",type:"money",required:!0,default:"((0.00))"},{column:"TaxAmt",type:"money",required:!0,default:"((0.00))"},{column:"Freight",type:"money",required:!0,default:"((0.00))"},{column:"TotalDue",type:"money",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesOrderDetail",description:"Individual products associated with a specific sales order. See SalesOrderHeader.",primarykey:["SalesOrderDetailID","SalesOrderID"],columns:[{column:"SalesOrderID",type:"ref",refobj:"SalesOrderHeader",required:!0},{column:"SalesOrderDetailID",type:"num",negatives:!0,digits:10,required:!0},{column:"CarrierTrackingNumber",type:"text",unicode:!0,maxchars:25,required:!1},{column:"OrderQty",type:"num",negatives:!0,digits:5,required:!0},{column:"ProductID",type:"ref",refobj:"SpecialOfferProduct_SpecialOfferIDProductID",required:!0},{column:"SpecialOfferID",type:"ref",refobj:"SpecialOfferProductProductID",required:!0},{column:"UnitPrice",type:"money",required:!0},{column:"UnitPriceDiscount",type:"money",required:!0,default:"((0.0))"},{column:"LineTotal",type:"numeric",required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesOrderHeader",description:"General sales order information.",primarykey:"SalesOrderID",columns:[{column:"RevisionNumber",type:"num",negatives:!1,digits:3,required:!0,default:"((0))"},{column:"OrderDate",type:"datetime",required:!0,default:"(getdate())"},{column:"DueDate",type:"datetime",required:!0},{column:"ShipDate",type:"datetime",required:!1},{column:"Status",type:"num",negatives:!1,digits:3,required:!0,default:"((1))"},{column:"OnlineOrderFlag",type:"bit",required:!0,default:"((1))"},{column:"SalesOrderNumber",type:"text",unicode:!0,minchars:3,maxchars:25,required:!0},{column:"PurchaseOrderNumber",type:"text",unicode:!0,maxchars:25,required:!1},{column:"AccountNumber",type:"text",unicode:!0,maxchars:15,required:!1},{column:"CustomerID",type:"ref",refobj:"Customer",required:!0},{column:"SalesPersonID",type:"ref",refobj:"SalesPerson",required:!1},{column:"TerritoryID",type:"ref",refobj:"SalesTerritory",required:!1},{column:"BillToAddressID",type:"ref",refobj:"Address",required:!0},{column:"ShipToAddressID",type:"ref",refobj:"Address",required:!0},{column:"ShipMethodID",type:"ref",refobj:"ShipMethod",required:!0},{column:"CreditCardID",type:"ref",refobj:"CreditCard",required:!1},{column:"CreditCardApprovalCode",type:"text",unicode:!1,maxchars:15,required:!1},{column:"CurrencyRateID",type:"ref",refobj:"CurrencyRate",required:!1},{column:"SubTotal",type:"money",required:!0,default:"((0.00))"},{column:"TaxAmt",type:"money",required:!0,default:"((0.00))"},{column:"Freight",type:"money",required:!0,default:"((0.00))"},{column:"TotalDue",type:"money",required:!0},{column:"Comment",type:"text",unicode:!0,maxchars:128,required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesOrderHeaderSalesReason",description:"Cross-reference table mapping sales orders to sales reason codes.",primarykey:["SalesOrderID","SalesReasonID"],columns:[{column:"SalesOrderID",type:"ref",refobj:"SalesOrderHeader",required:!0},{column:"SalesReasonID",type:"ref",refobj:"SalesReason",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesPerson",description:"Sales representative current information.",primarykey:"BusinessEntityID",columns:[{column:"TerritoryID",type:"ref",refobj:"SalesTerritory",required:!1},{column:"SalesQuota",type:"money",required:!1},{column:"Bonus",type:"money",required:!0,default:"((0.00))"},{column:"CommissionPct",type:"smallmoney",required:!0,default:"((0.00))"},{column:"SalesYTD",type:"money",required:!0,default:"((0.00))"},{column:"SalesLastYear",type:"money",required:!0,default:"((0.00))"},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesPersonQuotaHistory",description:"Sales performance tracking.",primarykey:["BusinessEntityID","QuotaDate"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"SalesPerson",required:!0},{column:"QuotaDate",type:"datetime",required:!0},{column:"SalesQuota",type:"money",required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesReason",description:"Lookup table of customer purchase reasons.",primarykey:"SalesReasonID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ReasonType",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesTaxRate",description:"Tax rate lookup table.",primarykey:"SalesTaxRateID",columns:[{column:"StateProvinceID",type:"ref",refobj:"StateProvince",required:!0},{column:"TaxType",type:"num",negatives:!1,digits:3,required:!0},{column:"TaxRate",type:"smallmoney",required:!0,default:"((0.00))"},{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesTerritory",description:"Sales territory lookup table.",primarykey:"TerritoryID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"CountryRegionCode",type:"ref",refobj:"CountryRegion",required:!0},{column:"Group",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"SalesYTD",type:"money",required:!0,default:"((0.00))"},{column:"SalesLastYear",type:"money",required:!0,default:"((0.00))"},{column:"CostYTD",type:"money",required:!0,default:"((0.00))"},{column:"CostLastYear",type:"money",required:!0,default:"((0.00))"},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SalesTerritoryHistory",description:"Sales representative transfers to other sales territories.",primarykey:["BusinessEntityID","StartDate","TerritoryID"],columns:[{column:"BusinessEntityID",type:"ref",refobj:"SalesPerson",required:!0},{column:"TerritoryID",type:"ref",refobj:"SalesTerritory",required:!0},{column:"StartDate",type:"datetime",required:!0},{column:"EndDate",type:"datetime",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ScrapReason",description:"Manufacturing failure reasons lookup table.",primarykey:"ScrapReasonID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Shift",description:"Work shift lookup table.",primarykey:"ShiftID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"StartTime",type:"time",required:!0},{column:"EndTime",type:"time",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ShipMethod",description:"Shipping company lookup table.",primarykey:"ShipMethodID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ShipBase",type:"money",required:!0,default:"((0.00))"},{column:"ShipRate",type:"money",required:!0,default:"((0.00))"},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"ShoppingCartItem",description:"Contains online customer orders until the order is submitted or cancelled.",primarykey:"ShoppingCartItemID",columns:[{column:"ShoppingCartID",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"Quantity",type:"num",negatives:!0,digits:10,required:!0,default:"((1))"},{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"DateCreated",type:"datetime",required:!0,default:"(getdate())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SpecialOffer",description:"Sale discounts lookup table.",primarykey:"SpecialOfferID",columns:[{column:"Description",type:"text",unicode:!0,minchars:3,maxchars:255,required:!0},{column:"DiscountPct",type:"smallmoney",required:!0,default:"((0.00))"},{column:"Type",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"Category",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"StartDate",type:"datetime",required:!0},{column:"EndDate",type:"datetime",required:!0},{column:"MinQty",type:"num",negatives:!0,digits:10,required:!0,default:"((0))"},{column:"MaxQty",type:"num",negatives:!0,digits:10,required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"SpecialOfferProduct",description:"Cross-reference table mapping products to special offer discounts.",primarykey:["ProductID","SpecialOfferID"],columns:[{column:"SpecialOfferID",type:"ref",refobj:"SpecialOffer",required:!0},{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"StateProvince",description:"State and province lookup table.",primarykey:"StateProvinceID",columns:[{column:"StateProvinceCode",type:"text",unicode:!0,minchars:3,maxchars:3,required:!0},{column:"CountryRegionCode",type:"ref",refobj:"CountryRegion",required:!0},{column:"IsOnlyStateProvinceFlag",type:"bit",required:!0,default:"((1))"},{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"TerritoryID",type:"ref",refobj:"SalesTerritory",required:!0},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Store",description:"Customers (resellers) of Adventure Works products.",primarykey:"BusinessEntityID",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"SalesPersonID",type:"ref",refobj:"SalesPerson",required:!1},{column:"Demographics",type:"xml",required:!1},{column:"rowguid",type:"uniqueidentifier",required:!0,default:"(newid())"},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"TransactionHistory",description:"Record of each purchase order, sales order, or work order transaction year to date.",primarykey:"TransactionID",columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"ReferenceOrderID",type:"num",negatives:!0,digits:10,required:!0},{column:"ReferenceOrderLineID",type:"num",negatives:!0,digits:10,required:!0,default:"((0))"},{column:"TransactionDate",type:"datetime",required:!0,default:"(getdate())"},{column:"TransactionType",type:"text",unicode:!0,minchars:3,maxchars:1,required:!0},{column:"Quantity",type:"num",negatives:!0,digits:10,required:!0},{column:"ActualCost",type:"money",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"TransactionHistoryArchive",description:"Transactions for previous years.",primarykey:"TransactionID",columns:[{column:"ProductID",type:"num",negatives:!0,digits:10,required:!0},{column:"ReferenceOrderID",type:"num",negatives:!0,digits:10,required:!0},{column:"ReferenceOrderLineID",type:"num",negatives:!0,digits:10,required:!0,default:"((0))"},{column:"TransactionDate",type:"datetime",required:!0,default:"(getdate())"},{column:"TransactionType",type:"text",unicode:!0,minchars:3,maxchars:1,required:!0},{column:"Quantity",type:"num",negatives:!0,digits:10,required:!0},{column:"ActualCost",type:"money",required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"UnitMeasure",description:"Unit of measure lookup table.",primarykey:"UnitMeasureCode",columns:[{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"Vendor",description:"Companies from whom Adventure Works Cycles purchases parts or other goods.",primarykey:"BusinessEntityID",columns:[{column:"AccountNumber",type:"text",unicode:!0,minchars:3,maxchars:15,required:!0},{column:"Name",type:"text",unicode:!0,minchars:3,maxchars:50,required:!0},{column:"CreditRating",type:"num",negatives:!1,digits:3,required:!0},{column:"PreferredVendorStatus",type:"bit",required:!0,default:"((1))"},{column:"ActiveFlag",type:"bit",required:!0,default:"((1))"},{column:"PurchasingWebServiceURL",type:"text",unicode:!0,maxchars:1024,required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"WorkOrder",description:"Manufacturing work orders.",primarykey:"WorkOrderID",columns:[{column:"ProductID",type:"ref",refobj:"Product",required:!0},{column:"OrderQty",type:"num",negatives:!0,digits:10,required:!0},{column:"StockedQty",type:"num",negatives:!0,digits:10,required:!0},{column:"ScrappedQty",type:"num",negatives:!0,digits:5,required:!0},{column:"StartDate",type:"datetime",required:!0},{column:"EndDate",type:"datetime",required:!1},{column:"DueDate",type:"datetime",required:!0},{column:"ScrapReasonID",type:"ref",refobj:"ScrapReason",required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]},{object:"WorkOrderRouting",description:"Work order details.",primarykey:["OperationSequence","ProductID","WorkOrderID"],columns:[{column:"WorkOrderID",type:"ref",refobj:"WorkOrder",required:!0},{column:"ProductID",type:"num",negatives:!0,digits:10,required:!0},{column:"OperationSequence",type:"num",negatives:!0,digits:5,required:!0},{column:"LocationID",type:"ref",refobj:"Location",required:!0},{column:"ScheduledStartDate",type:"datetime",required:!0},{column:"ScheduledEndDate",type:"datetime",required:!0},{column:"ActualStartDate",type:"datetime",required:!1},{column:"ActualEndDate",type:"datetime",required:!1},{column:"ActualResourceHrs",type:"num",negatives:!0,digits:9,decimals:4,required:!1},{column:"PlannedCost",type:"money",required:!0},{column:"ActualCost",type:"money",required:!1},{column:"ModifiedDate",type:"datetime",required:!0,default:"(getdate())"}]}],views:[{view:"vAdditionalContactInfo",definition:"\nCREATE VIEW [Person].[vAdditionalContactInfo] \nAS \nSELECT \n    [BusinessEntityID] \n    ,[FirstName]\n    ,[MiddleName]\n    ,[LastName]\n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:telephoneNumber)[1]/act:number', 'nvarchar(50)') AS [TelephoneNumber] \n    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:telephoneNumber/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [TelephoneSpecialInstructions] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\";\n        (act:homePostalAddress/act:Street)[1]', 'nvarchar(50)') AS [Street] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:City)[1]', 'nvarchar(50)') AS [City] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:StateProvince)[1]', 'nvarchar(50)') AS [StateProvince] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:PostalCode)[1]', 'nvarchar(50)') AS [PostalCode] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:CountryRegion)[1]', 'nvarchar(50)') AS [CountryRegion] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:homePostalAddress/act:SpecialInstructions/text())[1]', 'nvarchar(max)') AS [HomeAddressSpecialInstructions] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:eMail/act:eMailAddress)[1]', 'nvarchar(128)') AS [EMailAddress] \n    ,LTRIM(RTRIM([ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:eMail/act:SpecialInstructions/text())[1]', 'nvarchar(max)'))) AS [EMailSpecialInstructions] \n    ,[ContactInfo].ref.value(N'declare namespace ci=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactInfo\"; \n        declare namespace act=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ContactTypes\"; \n        (act:eMail/act:SpecialInstructions/act:telephoneNumber/act:number)[1]', 'nvarchar(50)') AS [EMailTelephoneNumber] \n    ,[rowguid] \n    ,[ModifiedDate]\nFROM [Person].[Person]\nOUTER APPLY [AdditionalContactInfo].no"},{view:"vEmployee",definition:"\nCREATE VIEW [HumanResources].[vEmployee] \nAS \nSELECT \n    e.[BusinessEntityID]\n    ,p.[Title]\n    ,p.[FirstName]\n    ,p.[MiddleName]\n    ,p.[LastName]\n    ,p.[Suffix]\n    ,e.[JobTitle]  \n    ,pp.[PhoneNumber]\n    ,pnt.[Name] AS [PhoneNumberType]\n    ,ea.[EmailAddress]\n    ,p.[EmailPromotion]\n    ,a.[AddressLine1]\n    ,a.[AddressLine2]\n    ,a.[City]\n    ,sp.[Name] AS [StateProvinceName] \n    ,a.[PostalCode]\n    ,cr.[Name] AS [CountryRegionName] \n    ,p.[AdditionalContactInfo]\nFROM [HumanResources].[Employee] e\n\tINNER JOIN [Person].[Person] p\n\tON p.[BusinessEntityID] = e.[BusinessEntityID]\n    INNER JOIN [Person].[BusinessEntityAddress] bea \n    ON bea.[BusinessEntityID] = e.[BusinessEntityID] \n    INNER JOIN [Person].[Address] a \n    ON a.[AddressID] = bea.[AddressID]\n    INNER JOIN [Person].[StateProvince] sp \n    ON sp.[StateProvinceID] = a.[StateProvinceID]\n    INNER JOIN [Person].[CountryRegion] cr \n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\n    LEFT OUTER JOIN [Person].[PersonPhone] pp\n    ON pp.BusinessEntityID = p.[BusinessEntityID]\n    LEFT OUTER JOIN [Person].[PhoneNumberType] pnt\n    ON pp.[PhoneNumberTypeID] = pnt.[PhoneNumberTypeID]\n    LEFT OUTER JOIN [Person].[EmailAddress] ea\n    ON p.[BusinessEntityID] = ea.[BusinessEntityID];\n"},{view:"vEmployeeDepartment",definition:"\nCREATE VIEW [HumanResources].[vEmployeeDepartment] \nAS \nSELECT \n    e.[BusinessEntityID] \n    ,p.[Title] \n    ,p.[FirstName] \n    ,p.[MiddleName] \n    ,p.[LastName] \n    ,p.[Suffix] \n    ,e.[JobTitle]\n    ,d.[Name] AS [Department] \n    ,d.[GroupName] \n    ,edh.[StartDate] \nFROM [HumanResources].[Employee] e\n\tINNER JOIN [Person].[Person] p\n\tON p.[BusinessEntityID] = e.[BusinessEntityID]\n    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh \n    ON e.[BusinessEntityID] = edh.[BusinessEntityID] \n    INNER JOIN [HumanResources].[Department] d \n    ON edh.[DepartmentID] = d.[DepartmentID] \nWHERE edh.EndDate IS NULL\n"},{view:"vEmployeeDepartmentHistory",definition:"\nCREATE VIEW [HumanResources].[vEmployeeDepartmentHistory] \nAS \nSELECT \n    e.[BusinessEntityID] \n    ,p.[Title] \n    ,p.[FirstName] \n    ,p.[MiddleName] \n    ,p.[LastName] \n    ,p.[Suffix] \n    ,s.[Name] AS [Shift]\n    ,d.[Name] AS [Department] \n    ,d.[GroupName] \n    ,edh.[StartDate] \n    ,edh.[EndDate]\nFROM [HumanResources].[Employee] e\n\tINNER JOIN [Person].[Person] p\n\tON p.[BusinessEntityID] = e.[BusinessEntityID]\n    INNER JOIN [HumanResources].[EmployeeDepartmentHistory] edh \n    ON e.[BusinessEntityID] = edh.[BusinessEntityID] \n    INNER JOIN [HumanResources].[Department] d \n    ON edh.[DepartmentID] = d.[DepartmentID] \n    INNER JOIN [HumanResources].[Shift] s\n    ON s.[ShiftID] = edh.[ShiftID];\n"},{view:"vIndividualCustomer",definition:"\nCREATE VIEW [Sales].[vIndividualCustomer] \nAS \nSELECT \n    p.[BusinessEntityID]\n    ,p.[Title]\n    ,p.[FirstName]\n    ,p.[MiddleName]\n    ,p.[LastName]\n    ,p.[Suffix]\n    ,pp.[PhoneNumber]\n\t,pnt.[Name] AS [PhoneNumberType]\n    ,ea.[EmailAddress]\n    ,p.[EmailPromotion]\n    ,at.[Name] AS [AddressType]\n    ,a.[AddressLine1]\n    ,a.[AddressLine2]\n    ,a.[City]\n    ,[StateProvinceName] = sp.[Name]\n    ,a.[PostalCode]\n    ,[CountryRegionName] = cr.[Name]\n    ,p.[Demographics]\nFROM [Person].[Person] p\n    INNER JOIN [Person].[BusinessEntityAddress] bea \n    ON bea.[BusinessEntityID] = p.[BusinessEntityID] \n    INNER JOIN [Person].[Address] a \n    ON a.[AddressID] = bea.[AddressID]\n    INNER JOIN [Person].[StateProvince] sp \n    ON sp.[StateProvinceID] = a.[StateProvinceID]\n    INNER JOIN [Person].[CountryRegion] cr \n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\n    INNER JOIN [Person].[AddressType] at \n    ON at.[AddressTypeID] = bea.[AddressTypeID]\n\tINNER JOIN [Sales].[Customer] c\n\tON c.[PersonID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID]\nWHERE c.StoreID IS NULL;\n"},{view:"vJobCandidate",definition:"\nCREATE VIEW [HumanResources].[vJobCandidate] \nAS \nSELECT \n    jc.[JobCandidateID] \n    ,jc.[BusinessEntityID] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Prefix)[1]', 'nvarchar(30)') AS [Name.Prefix] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\";\n        (/Resume/Name/Name.First)[1]', 'nvarchar(30)') AS [Name.First] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Middle)[1]', 'nvarchar(30)') AS [Name.Middle] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Last)[1]', 'nvarchar(30)') AS [Name.Last] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Name/Name.Suffix)[1]', 'nvarchar(30)') AS [Name.Suffix] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/Skills)[1]', 'nvarchar(max)') AS [Skills] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Type)[1]', 'nvarchar(30)') AS [Addr.Type]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Addr.Loc.CountryRegion]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Addr.Loc.State]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Addr.Loc.City]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Address/Addr.PostalCode)[1]', 'nvarchar(20)') AS [Addr.PostalCode]\n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/EMail)[1]', 'nvarchar(max)') AS [EMail] \n    ,[Resume].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (/Resume/WebSite)[1]', 'nvarchar(max)') AS [WebSite] \n    ,jc.[ModifiedDate] \nFROM [HumanResources].[JobCandidate] jc \nCROSS APPLY jc.[Resume].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n    /Resume') AS Resume(ref);\n"},{view:"vJobCandidateEducation",definition:"\nCREATE VIEW [HumanResources].[vJobCandidateEducation] \nAS \nSELECT \n    jc.[JobCandidateID] \n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Level)[1]', 'nvarchar(max)') AS [Edu.Level]\n    ,CONVERT(datetime, REPLACE([Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Edu.StartDate] \n    ,CONVERT(datetime, REPLACE([Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Edu.EndDate] \n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Degree)[1]', 'nvarchar(50)') AS [Edu.Degree]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Major)[1]', 'nvarchar(50)') AS [Edu.Major]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Minor)[1]', 'nvarchar(50)') AS [Edu.Minor]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.GPA)[1]', 'nvarchar(5)') AS [Edu.GPA]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.GPAScale)[1]', 'nvarchar(5)') AS [Edu.GPAScale]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.School)[1]', 'nvarchar(100)') AS [Edu.School]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(100)') AS [Edu.Loc.CountryRegion]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Location/Location/Loc.State)[1]', 'nvarchar(100)') AS [Edu.Loc.State]\n    ,[Education].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Edu.Location/Location/Loc.City)[1]', 'nvarchar(100)') AS [Edu.Loc.City]\nFROM [HumanResources].[JobCandidate] jc \nCROSS APPLY jc.[Resume].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n    /Resume/Education') AS [Education](ref);\n"},{view:"vJobCandidateEmployment",definition:"\nCREATE VIEW [HumanResources].[vJobCandidateEmployment] \nAS \nSELECT \n    jc.[JobCandidateID] \n    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.StartDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.StartDate] \n    ,CONVERT(datetime, REPLACE([Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.EndDate)[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [Emp.EndDate] \n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.OrgName)[1]', 'nvarchar(100)') AS [Emp.OrgName]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.JobTitle)[1]', 'nvarchar(100)') AS [Emp.JobTitle]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Responsibility)[1]', 'nvarchar(max)') AS [Emp.Responsibility]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.FunctionCategory)[1]', 'nvarchar(max)') AS [Emp.FunctionCategory]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.IndustryCategory)[1]', 'nvarchar(max)') AS [Emp.IndustryCategory]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Location/Location/Loc.CountryRegion)[1]', 'nvarchar(max)') AS [Emp.Loc.CountryRegion]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Location/Location/Loc.State)[1]', 'nvarchar(max)') AS [Emp.Loc.State]\n    ,[Employment].ref.value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n        (Emp.Location/Location/Loc.City)[1]', 'nvarchar(max)') AS [Emp.Loc.City]\nFROM [HumanResources].[JobCandidate] jc \nCROSS APPLY jc.[Resume].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/Resume\"; \n    /Resume/Employment') AS Employment(ref);\n"},{view:"vPersonDemographics",definition:"\nCREATE VIEW [Sales].[vPersonDemographics] \nAS \nSELECT \n    p.[BusinessEntityID] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        TotalPurchaseYTD[1]', 'money') AS [TotalPurchaseYTD] \n    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        DateFirstPurchase[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [DateFirstPurchase] \n    ,CONVERT(datetime, REPLACE([IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        BirthDate[1]', 'nvarchar(20)') ,'Z', ''), 101) AS [BirthDate] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        MaritalStatus[1]', 'nvarchar(1)') AS [MaritalStatus] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        YearlyIncome[1]', 'nvarchar(30)') AS [YearlyIncome] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        Gender[1]', 'nvarchar(1)') AS [Gender] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        TotalChildren[1]', 'integer') AS [TotalChildren] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        NumberChildrenAtHome[1]', 'integer') AS [NumberChildrenAtHome] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        Education[1]', 'nvarchar(30)') AS [Education] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        Occupation[1]', 'nvarchar(30)') AS [Occupation] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        HomeOwnerFlag[1]', 'bit') AS [HomeOwnerFlag] \n    ,[IndividualSurvey].[ref].[value](N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n        NumberCarsOwned[1]', 'integer') AS [NumberCarsOwned] \nFROM [Person].[Person] p \nCROSS APPLY p.[Demographics].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/IndividualSurvey\"; \n    /IndividualSurvey') AS [IndividualSurvey](ref) \nWHERE [Demographics] IS NOT NULL;\n"},{view:"vProductAndDescription",definition:"\nCREATE VIEW [Production].[vProductAndDescription] \nWITH SCHEMABINDING \nAS \n-- View (indexed or standard) to display products and product descriptions by language.\nSELECT \n    p.[ProductID] \n    ,p.[Name] \n    ,pm.[Name] AS [ProductModel] \n    ,pmx.[CultureID] \n    ,pd.[Description] \nFROM [Production].[Product] p \n    INNER JOIN [Production].[ProductModel] pm \n    ON p.[ProductModelID] = pm.[ProductModelID] \n    INNER JOIN [Production].[ProductModelProductDescriptionCulture] pmx \n    ON pm.[ProductModelID] = pmx.[ProductModelID] \n    INNER JOIN [Production].[ProductDescription] pd \n    ON pmx.[ProductDescriptionID] = pd.[ProductDescriptionID];\n"},{view:"vProductModelCatalogDescription",definition:"\nCREATE VIEW [Production].[vProductModelCatalogDescription] \nAS \nSELECT \n    [ProductModelID] \n    ,[Name] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace html=\"http://www.w3.org/1999/xhtml\"; \n        (/p1:ProductDescription/p1:Summary/html:p)[1]', 'nvarchar(max)') AS [Summary] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        (/p1:ProductDescription/p1:Manufacturer/p1:Name)[1]', 'nvarchar(max)') AS [Manufacturer] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        (/p1:ProductDescription/p1:Manufacturer/p1:Copyright)[1]', 'nvarchar(30)') AS [Copyright] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        (/p1:ProductDescription/p1:Manufacturer/p1:ProductURL)[1]', 'nvarchar(256)') AS [ProductURL] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:WarrantyPeriod)[1]', 'nvarchar(256)') AS [WarrantyPeriod] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \n        (/p1:ProductDescription/p1:Features/wm:Warranty/wm:Description)[1]', 'nvarchar(256)') AS [WarrantyDescription] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:NoOfYears)[1]', 'nvarchar(256)') AS [NoOfYears] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\"; \n        (/p1:ProductDescription/p1:Features/wm:Maintenance/wm:Description)[1]', 'nvarchar(256)') AS [MaintenanceDescription] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \n        (/p1:ProductDescription/p1:Features/wf:wheel)[1]', 'nvarchar(256)') AS [Wheel] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \n        (/p1:ProductDescription/p1:Features/wf:saddle)[1]', 'nvarchar(256)') AS [Saddle] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \n        (/p1:ProductDescription/p1:Features/wf:pedal)[1]', 'nvarchar(256)') AS [Pedal] \n    ,[CatalogDescription].value(N'declare namespace p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\"; \n        declare namespace wf=\"http://www.adventure-works.com/schemas/OtherFeatures\"; \n        (/p1:ProductDescription/p1:Features/wf:BikeFrame)[1]', 'nvarchar(max)') AS [Bik"},{view:"vProductModelInstructions",definition:"\nCREATE VIEW [Production].[vProductModelInstructions] \nAS \nSELECT \n    [ProductModelID] \n    ,[Name] \n    ,[Instructions].value(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\"; \n        (/root/text())[1]', 'nvarchar(max)') AS [Instructions] \n    ,[MfgInstructions].ref.value('%40LocationID[1]', 'int') AS [LocationID] \n    ,[MfgInstructions].ref.value('%40SetupHours[1]', 'decimal(9, 4)') AS [SetupHours] \n    ,[MfgInstructions].ref.value('%40MachineHours[1]', 'decimal(9, 4)') AS [MachineHours] \n    ,[MfgInstructions].ref.value('%40LaborHours[1]', 'decimal(9, 4)') AS [LaborHours] \n    ,[MfgInstructions].ref.value('%40LotSize[1]', 'int') AS [LotSize] \n    ,[Steps].ref.value('string(.)[1]', 'nvarchar(1024)') AS [Step] \n    ,[rowguid] \n    ,[ModifiedDate]\nFROM [Production].[ProductModel] \nCROSS APPLY [Instructions].nodes(N'declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\"; \n    /root/Location') MfgInstructions(ref)\nCROSS APPLY [MfgInstructions].ref.nodes('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelManuInstructions\"; \n    step') Steps(ref);\n"},{view:"vSalesPerson",definition:"\nCREATE VIEW [Sales].[vSalesPerson] \nAS \nSELECT \n    s.[BusinessEntityID]\n    ,p.[Title]\n    ,p.[FirstName]\n    ,p.[MiddleName]\n    ,p.[LastName]\n    ,p.[Suffix]\n    ,e.[JobTitle]\n    ,pp.[PhoneNumber]\n\t,pnt.[Name] AS [PhoneNumberType]\n    ,ea.[EmailAddress]\n    ,p.[EmailPromotion]\n    ,a.[AddressLine1]\n    ,a.[AddressLine2]\n    ,a.[City]\n    ,[StateProvinceName] = sp.[Name]\n    ,a.[PostalCode]\n    ,[CountryRegionName] = cr.[Name]\n    ,[TerritoryName] = st.[Name]\n    ,[TerritoryGroup] = st.[Group]\n    ,s.[SalesQuota]\n    ,s.[SalesYTD]\n    ,s.[SalesLastYear]\nFROM [Sales].[SalesPerson] s\n    INNER JOIN [HumanResources].[Employee] e \n    ON e.[BusinessEntityID] = s.[BusinessEntityID]\n\tINNER JOIN [Person].[Person] p\n\tON p.[BusinessEntityID] = s.[BusinessEntityID]\n    INNER JOIN [Person].[BusinessEntityAddress] bea \n    ON bea.[BusinessEntityID] = s.[BusinessEntityID] \n    INNER JOIN [Person].[Address] a \n    ON a.[AddressID] = bea.[AddressID]\n    INNER JOIN [Person].[StateProvince] sp \n    ON sp.[StateProvinceID] = a.[StateProvinceID]\n    INNER JOIN [Person].[CountryRegion] cr \n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\n    LEFT OUTER JOIN [Sales].[SalesTerritory] st \n    ON st.[TerritoryID] = s.[TerritoryID]\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID];\n"},{view:"vSalesPersonSalesByFiscalYears",definition:"\nCREATE VIEW [Sales].[vSalesPersonSalesByFiscalYears] \nAS \nSELECT \n    pvt.[SalesPersonID]\n    ,pvt.[FullName]\n    ,pvt.[JobTitle]\n    ,pvt.[SalesTerritory]\n    ,pvt.[2002]\n    ,pvt.[2003]\n    ,pvt.[2004] \nFROM (SELECT \n        soh.[SalesPersonID]\n        ,p.[FirstName] + ' ' + COALESCE(p.[MiddleName], '') + ' ' + p.[LastName] AS [FullName]\n        ,e.[JobTitle]\n        ,st.[Name] AS [SalesTerritory]\n        ,soh.[SubTotal]\n        ,YEAR(DATEADD(m, 6, soh.[OrderDate])) AS [FiscalYear] \n    FROM [Sales].[SalesPerson] sp \n        INNER JOIN [Sales].[SalesOrderHeader] soh \n        ON sp.[BusinessEntityID] = soh.[SalesPersonID]\n        INNER JOIN [Sales].[SalesTerritory] st \n        ON sp.[TerritoryID] = st.[TerritoryID] \n        INNER JOIN [HumanResources].[Employee] e \n        ON soh.[SalesPersonID] = e.[BusinessEntityID] \n\t\tINNER JOIN [Person].[Person] p\n\t\tON p.[BusinessEntityID] = sp.[BusinessEntityID]\n\t ) AS soh \nPIVOT \n(\n    SUM([SubTotal]) \n    FOR [FiscalYear] \n    IN ([2002], [2003], [2004])\n) AS pvt;\n"},{view:"vStateProvinceCountryRegion",definition:"\nCREATE VIEW [Person].[vStateProvinceCountryRegion] \nWITH SCHEMABINDING \nAS \nSELECT \n    sp.[StateProvinceID] \n    ,sp.[StateProvinceCode] \n    ,sp.[IsOnlyStateProvinceFlag] \n    ,sp.[Name] AS [StateProvinceName] \n    ,sp.[TerritoryID] \n    ,cr.[CountryRegionCode] \n    ,cr.[Name] AS [CountryRegionName]\nFROM [Person].[StateProvince] sp \n    INNER JOIN [Person].[CountryRegion] cr \n    ON sp.[CountryRegionCode] = cr.[CountryRegionCode];\n"},{view:"vStoreWithAddresses",definition:"\nCREATE VIEW [Sales].[vStoreWithAddresses] AS \nSELECT \n    s.[BusinessEntityID] \n    ,s.[Name] \n    ,at.[Name] AS [AddressType]\n    ,a.[AddressLine1] \n    ,a.[AddressLine2] \n    ,a.[City] \n    ,sp.[Name] AS [StateProvinceName] \n    ,a.[PostalCode] \n    ,cr.[Name] AS [CountryRegionName] \nFROM [Sales].[Store] s\n    INNER JOIN [Person].[BusinessEntityAddress] bea \n    ON bea.[BusinessEntityID] = s.[BusinessEntityID] \n    INNER JOIN [Person].[Address] a \n    ON a.[AddressID] = bea.[AddressID]\n    INNER JOIN [Person].[StateProvince] sp \n    ON sp.[StateProvinceID] = a.[StateProvinceID]\n    INNER JOIN [Person].[CountryRegion] cr \n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\n    INNER JOIN [Person].[AddressType] at \n    ON at.[AddressTypeID] = bea.[AddressTypeID];\n"},{view:"vStoreWithContacts",definition:"\nCREATE VIEW [Sales].[vStoreWithContacts] AS \nSELECT \n    s.[BusinessEntityID] \n    ,s.[Name] \n    ,ct.[Name] AS [ContactType] \n    ,p.[Title] \n    ,p.[FirstName] \n    ,p.[MiddleName] \n    ,p.[LastName] \n    ,p.[Suffix] \n    ,pp.[PhoneNumber] \n\t,pnt.[Name] AS [PhoneNumberType]\n    ,ea.[EmailAddress] \n    ,p.[EmailPromotion] \nFROM [Sales].[Store] s\n    INNER JOIN [Person].[BusinessEntityContact] bec \n    ON bec.[BusinessEntityID] = s.[BusinessEntityID]\n\tINNER JOIN [Person].[ContactType] ct\n\tON ct.[ContactTypeID] = bec.[ContactTypeID]\n\tINNER JOIN [Person].[Person] p\n\tON p.[BusinessEntityID] = bec.[PersonID]\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID];\n"},{view:"vStoreWithDemographics",definition:"\nCREATE VIEW [Sales].[vStoreWithDemographics] AS \nSELECT \n    s.[BusinessEntityID] \n    ,s.[Name] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/AnnualSales)[1]', 'money') AS [AnnualSales] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/AnnualRevenue)[1]', 'money') AS [AnnualRevenue] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/BankName)[1]', 'nvarchar(50)') AS [BankName] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/BusinessType)[1]', 'nvarchar(5)') AS [BusinessType] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/YearOpened)[1]', 'integer') AS [YearOpened] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/Specialty)[1]', 'nvarchar(50)') AS [Specialty] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/SquareFeet)[1]', 'integer') AS [SquareFeet] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/Brands)[1]', 'nvarchar(30)') AS [Brands] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/Internet)[1]', 'nvarchar(30)') AS [Internet] \n    ,s.[Demographics].value('declare default element namespace \"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/StoreSurvey\"; \n        (/StoreSurvey/NumberEmployees)[1]', 'integer') AS [NumberEmployees] \nFROM [Sales].[Store] s;\n"},{view:"vVendorWithAddresses",definition:"\nCREATE VIEW [Purchasing].[vVendorWithAddresses] AS \nSELECT \n    v.[BusinessEntityID]\n    ,v.[Name]\n    ,at.[Name] AS [AddressType]\n    ,a.[AddressLine1] \n    ,a.[AddressLine2] \n    ,a.[City] \n    ,sp.[Name] AS [StateProvinceName] \n    ,a.[PostalCode] \n    ,cr.[Name] AS [CountryRegionName] \nFROM [Purchasing].[Vendor] v\n    INNER JOIN [Person].[BusinessEntityAddress] bea \n    ON bea.[BusinessEntityID] = v.[BusinessEntityID] \n    INNER JOIN [Person].[Address] a \n    ON a.[AddressID] = bea.[AddressID]\n    INNER JOIN [Person].[StateProvince] sp \n    ON sp.[StateProvinceID] = a.[StateProvinceID]\n    INNER JOIN [Person].[CountryRegion] cr \n    ON cr.[CountryRegionCode] = sp.[CountryRegionCode]\n    INNER JOIN [Person].[AddressType] at \n    ON at.[AddressTypeID] = bea.[AddressTypeID];\n"},{view:"vVendorWithContacts",definition:"\nCREATE VIEW [Purchasing].[vVendorWithContacts] AS \nSELECT \n    v.[BusinessEntityID]\n    ,v.[Name]\n    ,ct.[Name] AS [ContactType] \n    ,p.[Title] \n    ,p.[FirstName] \n    ,p.[MiddleName] \n    ,p.[LastName] \n    ,p.[Suffix] \n    ,pp.[PhoneNumber] \n\t,pnt.[Name] AS [PhoneNumberType]\n    ,ea.[EmailAddress] \n    ,p.[EmailPromotion] \nFROM [Purchasing].[Vendor] v\n    INNER JOIN [Person].[BusinessEntityContact] bec \n    ON bec.[BusinessEntityID] = v.[BusinessEntityID]\n\tINNER JOIN [Person].ContactType ct\n\tON ct.[ContactTypeID] = bec.[ContactTypeID]\n\tINNER JOIN [Person].[Person] p\n\tON p.[BusinessEntityID] = bec.[PersonID]\n\tLEFT OUTER JOIN [Person].[EmailAddress] ea\n\tON ea.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PersonPhone] pp\n\tON pp.[BusinessEntityID] = p.[BusinessEntityID]\n\tLEFT OUTER JOIN [Person].[PhoneNumberType] pnt\n\tON pnt.[PhoneNumberTypeID] = pp.[PhoneNumberTypeID];\n"}]};